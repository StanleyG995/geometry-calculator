"use strict";function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_unsupportedIterableToArray(e)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var r;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(r="Object"===(r=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:r)||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?_arrayLikeToArray(e,t):void 0}function _iterableToArray(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}function _arrayWithoutHoles(e){if(Array.isArray(e))return _arrayLikeToArray(e)}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,a=new Array(t);r<t;r++)a[r]=e[r];return a}var currentShape,index,main=document.querySelector(".main"),shapesArray=Object.keys(shapes).map(function(e){return shapes[e]}),shapesButtons=Array.from(document.querySelectorAll(".shape")),inputsArea=document.querySelector(".inputs"),resultsArea=document.querySelector(".results"),shapeName=document.querySelector(".current-shape-name"),calculateButton=document.querySelector(".button-action"),themeButton=document.querySelector(".theme-button"),inputs=[],variables=[],resultsLabels=[],resultsValues=[],methods=[],theme="",changeTheme=function(){""===theme?(theme="dark",main.classList.add("dark"),themeButton.classList.add("theme-active")):(theme="",main.classList.remove("dark"),themeButton.classList.remove("theme-active"))},pickShape=function(e){shapesButtons.forEach(function(e){e.firstChild.classList.remove("shape-active")}),e.target.firstChild.classList.add("shape-active"),currentShape=e.target,console.log(currentShape),index=getShapeInfo(),setFields()},getShapeInfo=function(){var e=shapesButtons.findIndex(function(e){return e===currentShape});inputs=[],methods=[],resultsLabels=[],resultsValues=[],inputsArea.innerHTML="",resultsArea.innerHTML="";for(var t=0;t<shapesArray.length;t++)if(t===e)for(var r in shapesArray[t])("number"==typeof shapesArray[t][r]?inputs:(methods.push(shapesArray[t][r]),resultsLabels)).push(r)},setFields=function(){shapeName.innerText=currentShape.querySelector(".shape-label").innerText,inputs.forEach(function(e){var t=document.createElement("div");t.innerHTML="\n             <div class=\"input-group\">\n                <label for='input'>".concat(e,":</label>\n                <input type='number' class='input' id='").concat(e,"-input'>\n              </div>\n        "),inputsArea.appendChild(t)}),resultsLabels.forEach(function(e){var t=document.createElement("div");t.innerHTML='\n        <p class="result">'.concat(e,' = <span class="result-value" </span></p>\n        '),resultsArea.appendChild(t)})},getInputValues=function(){var e=document.getElementsByClassName("input");variables=[];for(var t=0;t<e.length;t++)variables[t]=e[t].value;console.log(variables),calculate()},calculate=function(){resultsValues=[];var e=document.getElementsByClassName("result-value");methods.forEach(function(e){resultsValues.push(e.apply(void 0,_toConsumableArray(variables)))});for(var t=0;t<resultsValues.length;t++)e[t].innerText=resultsValues[t].toFixed(2)};console.log(shapesArray),shapesButtons.forEach(function(e){e.addEventListener("click",pickShape)}),calculateButton.addEventListener("click",getInputValues),themeButton.addEventListener("click",changeTheme);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
